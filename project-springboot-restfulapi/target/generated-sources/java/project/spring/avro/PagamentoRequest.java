/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package project.spring.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PagamentoRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4439554826835250676L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PagamentoRequest\",\"namespace\":\"project.spring.avro\",\"fields\":[{\"name\":\"cartao\",\"type\":{\"type\":\"record\",\"name\":\"CartaoCreditoRequest\",\"fields\":[{\"name\":\"nomeCartao\",\"type\":\"string\"},{\"name\":\"numeroCartao\",\"type\":\"string\"},{\"name\":\"mesExpiracao\",\"type\":\"string\"},{\"name\":\"anoExpiracao\",\"type\":\"string\"},{\"name\":\"ccv\",\"type\":\"string\"}]}},{\"name\":\"titular\",\"type\":{\"type\":\"record\",\"name\":\"TitularCartaoCreditoRequest\",\"fields\":[{\"name\":\"nomeTitularCartao\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"cpf_cnpj_titular\",\"type\":\"string\"},{\"name\":\"codigoPostal\",\"type\":\"string\"},{\"name\":\"numeroEndereco\",\"type\":\"string\"},{\"name\":\"telefone\",\"type\":\"string\"}]}},{\"name\":\"identificadorApiPrincipal\",\"type\":{\"type\":\"record\",\"name\":\"IdentificadorApiPrincipalRequest\",\"fields\":[{\"name\":\"identificadorApiPrincipal\",\"type\":\"long\"}]}},{\"name\":\"value\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":2}},{\"name\":\"usuario\",\"type\":{\"type\":\"record\",\"name\":\"UsuarioPagamentoRequest\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"nome\",\"type\":\"string\"},{\"name\":\"cpf_cnpj\",\"type\":\"string\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<PagamentoRequest> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PagamentoRequest> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PagamentoRequest> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PagamentoRequest> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PagamentoRequest> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PagamentoRequest to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PagamentoRequest from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PagamentoRequest instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PagamentoRequest fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private project.spring.avro.CartaoCreditoRequest cartao;
  private project.spring.avro.TitularCartaoCreditoRequest titular;
  private project.spring.avro.IdentificadorApiPrincipalRequest identificadorApiPrincipal;
  private java.nio.ByteBuffer value;
  private project.spring.avro.UsuarioPagamentoRequest usuario;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PagamentoRequest() {}

  /**
   * All-args constructor.
   * @param cartao The new value for cartao
   * @param titular The new value for titular
   * @param identificadorApiPrincipal The new value for identificadorApiPrincipal
   * @param value The new value for value
   * @param usuario The new value for usuario
   */
  public PagamentoRequest(project.spring.avro.CartaoCreditoRequest cartao, project.spring.avro.TitularCartaoCreditoRequest titular, project.spring.avro.IdentificadorApiPrincipalRequest identificadorApiPrincipal, java.nio.ByteBuffer value, project.spring.avro.UsuarioPagamentoRequest usuario) {
    this.cartao = cartao;
    this.titular = titular;
    this.identificadorApiPrincipal = identificadorApiPrincipal;
    this.value = value;
    this.usuario = usuario;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return cartao;
    case 1: return titular;
    case 2: return identificadorApiPrincipal;
    case 3: return value;
    case 4: return usuario;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: cartao = (project.spring.avro.CartaoCreditoRequest)value$; break;
    case 1: titular = (project.spring.avro.TitularCartaoCreditoRequest)value$; break;
    case 2: identificadorApiPrincipal = (project.spring.avro.IdentificadorApiPrincipalRequest)value$; break;
    case 3: value = (java.nio.ByteBuffer)value$; break;
    case 4: usuario = (project.spring.avro.UsuarioPagamentoRequest)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'cartao' field.
   * @return The value of the 'cartao' field.
   */
  public project.spring.avro.CartaoCreditoRequest getCartao() {
    return cartao;
  }


  /**
   * Sets the value of the 'cartao' field.
   * @param value the value to set.
   */
  public void setCartao(project.spring.avro.CartaoCreditoRequest value) {
    this.cartao = value;
  }

  /**
   * Gets the value of the 'titular' field.
   * @return The value of the 'titular' field.
   */
  public project.spring.avro.TitularCartaoCreditoRequest getTitular() {
    return titular;
  }


  /**
   * Sets the value of the 'titular' field.
   * @param value the value to set.
   */
  public void setTitular(project.spring.avro.TitularCartaoCreditoRequest value) {
    this.titular = value;
  }

  /**
   * Gets the value of the 'identificadorApiPrincipal' field.
   * @return The value of the 'identificadorApiPrincipal' field.
   */
  public project.spring.avro.IdentificadorApiPrincipalRequest getIdentificadorApiPrincipal() {
    return identificadorApiPrincipal;
  }


  /**
   * Sets the value of the 'identificadorApiPrincipal' field.
   * @param value the value to set.
   */
  public void setIdentificadorApiPrincipal(project.spring.avro.IdentificadorApiPrincipalRequest value) {
    this.identificadorApiPrincipal = value;
  }

  /**
   * Gets the value of the 'value' field.
   * @return The value of the 'value' field.
   */
  public java.nio.ByteBuffer getValue() {
    return value;
  }


  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(java.nio.ByteBuffer value) {
    this.value = value;
  }

  /**
   * Gets the value of the 'usuario' field.
   * @return The value of the 'usuario' field.
   */
  public project.spring.avro.UsuarioPagamentoRequest getUsuario() {
    return usuario;
  }


  /**
   * Sets the value of the 'usuario' field.
   * @param value the value to set.
   */
  public void setUsuario(project.spring.avro.UsuarioPagamentoRequest value) {
    this.usuario = value;
  }

  /**
   * Creates a new PagamentoRequest RecordBuilder.
   * @return A new PagamentoRequest RecordBuilder
   */
  public static project.spring.avro.PagamentoRequest.Builder newBuilder() {
    return new project.spring.avro.PagamentoRequest.Builder();
  }

  /**
   * Creates a new PagamentoRequest RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PagamentoRequest RecordBuilder
   */
  public static project.spring.avro.PagamentoRequest.Builder newBuilder(project.spring.avro.PagamentoRequest.Builder other) {
    if (other == null) {
      return new project.spring.avro.PagamentoRequest.Builder();
    } else {
      return new project.spring.avro.PagamentoRequest.Builder(other);
    }
  }

  /**
   * Creates a new PagamentoRequest RecordBuilder by copying an existing PagamentoRequest instance.
   * @param other The existing instance to copy.
   * @return A new PagamentoRequest RecordBuilder
   */
  public static project.spring.avro.PagamentoRequest.Builder newBuilder(project.spring.avro.PagamentoRequest other) {
    if (other == null) {
      return new project.spring.avro.PagamentoRequest.Builder();
    } else {
      return new project.spring.avro.PagamentoRequest.Builder(other);
    }
  }

  /**
   * RecordBuilder for PagamentoRequest instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PagamentoRequest>
    implements org.apache.avro.data.RecordBuilder<PagamentoRequest> {

    private project.spring.avro.CartaoCreditoRequest cartao;
    private project.spring.avro.CartaoCreditoRequest.Builder cartaoBuilder;
    private project.spring.avro.TitularCartaoCreditoRequest titular;
    private project.spring.avro.TitularCartaoCreditoRequest.Builder titularBuilder;
    private project.spring.avro.IdentificadorApiPrincipalRequest identificadorApiPrincipal;
    private project.spring.avro.IdentificadorApiPrincipalRequest.Builder identificadorApiPrincipalBuilder;
    private java.nio.ByteBuffer value;
    private project.spring.avro.UsuarioPagamentoRequest usuario;
    private project.spring.avro.UsuarioPagamentoRequest.Builder usuarioBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(project.spring.avro.PagamentoRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.cartao)) {
        this.cartao = data().deepCopy(fields()[0].schema(), other.cartao);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasCartaoBuilder()) {
        this.cartaoBuilder = project.spring.avro.CartaoCreditoRequest.newBuilder(other.getCartaoBuilder());
      }
      if (isValidValue(fields()[1], other.titular)) {
        this.titular = data().deepCopy(fields()[1].schema(), other.titular);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasTitularBuilder()) {
        this.titularBuilder = project.spring.avro.TitularCartaoCreditoRequest.newBuilder(other.getTitularBuilder());
      }
      if (isValidValue(fields()[2], other.identificadorApiPrincipal)) {
        this.identificadorApiPrincipal = data().deepCopy(fields()[2].schema(), other.identificadorApiPrincipal);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasIdentificadorApiPrincipalBuilder()) {
        this.identificadorApiPrincipalBuilder = project.spring.avro.IdentificadorApiPrincipalRequest.newBuilder(other.getIdentificadorApiPrincipalBuilder());
      }
      if (isValidValue(fields()[3], other.value)) {
        this.value = data().deepCopy(fields()[3].schema(), other.value);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.usuario)) {
        this.usuario = data().deepCopy(fields()[4].schema(), other.usuario);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasUsuarioBuilder()) {
        this.usuarioBuilder = project.spring.avro.UsuarioPagamentoRequest.newBuilder(other.getUsuarioBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing PagamentoRequest instance
     * @param other The existing instance to copy.
     */
    private Builder(project.spring.avro.PagamentoRequest other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.cartao)) {
        this.cartao = data().deepCopy(fields()[0].schema(), other.cartao);
        fieldSetFlags()[0] = true;
      }
      this.cartaoBuilder = null;
      if (isValidValue(fields()[1], other.titular)) {
        this.titular = data().deepCopy(fields()[1].schema(), other.titular);
        fieldSetFlags()[1] = true;
      }
      this.titularBuilder = null;
      if (isValidValue(fields()[2], other.identificadorApiPrincipal)) {
        this.identificadorApiPrincipal = data().deepCopy(fields()[2].schema(), other.identificadorApiPrincipal);
        fieldSetFlags()[2] = true;
      }
      this.identificadorApiPrincipalBuilder = null;
      if (isValidValue(fields()[3], other.value)) {
        this.value = data().deepCopy(fields()[3].schema(), other.value);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.usuario)) {
        this.usuario = data().deepCopy(fields()[4].schema(), other.usuario);
        fieldSetFlags()[4] = true;
      }
      this.usuarioBuilder = null;
    }

    /**
      * Gets the value of the 'cartao' field.
      * @return The value.
      */
    public project.spring.avro.CartaoCreditoRequest getCartao() {
      return cartao;
    }


    /**
      * Sets the value of the 'cartao' field.
      * @param value The value of 'cartao'.
      * @return This builder.
      */
    public project.spring.avro.PagamentoRequest.Builder setCartao(project.spring.avro.CartaoCreditoRequest value) {
      validate(fields()[0], value);
      this.cartaoBuilder = null;
      this.cartao = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'cartao' field has been set.
      * @return True if the 'cartao' field has been set, false otherwise.
      */
    public boolean hasCartao() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'cartao' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public project.spring.avro.CartaoCreditoRequest.Builder getCartaoBuilder() {
      if (cartaoBuilder == null) {
        if (hasCartao()) {
          setCartaoBuilder(project.spring.avro.CartaoCreditoRequest.newBuilder(cartao));
        } else {
          setCartaoBuilder(project.spring.avro.CartaoCreditoRequest.newBuilder());
        }
      }
      return cartaoBuilder;
    }

    /**
     * Sets the Builder instance for the 'cartao' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public project.spring.avro.PagamentoRequest.Builder setCartaoBuilder(project.spring.avro.CartaoCreditoRequest.Builder value) {
      clearCartao();
      cartaoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'cartao' field has an active Builder instance
     * @return True if the 'cartao' field has an active Builder instance
     */
    public boolean hasCartaoBuilder() {
      return cartaoBuilder != null;
    }

    /**
      * Clears the value of the 'cartao' field.
      * @return This builder.
      */
    public project.spring.avro.PagamentoRequest.Builder clearCartao() {
      cartao = null;
      cartaoBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'titular' field.
      * @return The value.
      */
    public project.spring.avro.TitularCartaoCreditoRequest getTitular() {
      return titular;
    }


    /**
      * Sets the value of the 'titular' field.
      * @param value The value of 'titular'.
      * @return This builder.
      */
    public project.spring.avro.PagamentoRequest.Builder setTitular(project.spring.avro.TitularCartaoCreditoRequest value) {
      validate(fields()[1], value);
      this.titularBuilder = null;
      this.titular = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'titular' field has been set.
      * @return True if the 'titular' field has been set, false otherwise.
      */
    public boolean hasTitular() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'titular' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public project.spring.avro.TitularCartaoCreditoRequest.Builder getTitularBuilder() {
      if (titularBuilder == null) {
        if (hasTitular()) {
          setTitularBuilder(project.spring.avro.TitularCartaoCreditoRequest.newBuilder(titular));
        } else {
          setTitularBuilder(project.spring.avro.TitularCartaoCreditoRequest.newBuilder());
        }
      }
      return titularBuilder;
    }

    /**
     * Sets the Builder instance for the 'titular' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public project.spring.avro.PagamentoRequest.Builder setTitularBuilder(project.spring.avro.TitularCartaoCreditoRequest.Builder value) {
      clearTitular();
      titularBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'titular' field has an active Builder instance
     * @return True if the 'titular' field has an active Builder instance
     */
    public boolean hasTitularBuilder() {
      return titularBuilder != null;
    }

    /**
      * Clears the value of the 'titular' field.
      * @return This builder.
      */
    public project.spring.avro.PagamentoRequest.Builder clearTitular() {
      titular = null;
      titularBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'identificadorApiPrincipal' field.
      * @return The value.
      */
    public project.spring.avro.IdentificadorApiPrincipalRequest getIdentificadorApiPrincipal() {
      return identificadorApiPrincipal;
    }


    /**
      * Sets the value of the 'identificadorApiPrincipal' field.
      * @param value The value of 'identificadorApiPrincipal'.
      * @return This builder.
      */
    public project.spring.avro.PagamentoRequest.Builder setIdentificadorApiPrincipal(project.spring.avro.IdentificadorApiPrincipalRequest value) {
      validate(fields()[2], value);
      this.identificadorApiPrincipalBuilder = null;
      this.identificadorApiPrincipal = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'identificadorApiPrincipal' field has been set.
      * @return True if the 'identificadorApiPrincipal' field has been set, false otherwise.
      */
    public boolean hasIdentificadorApiPrincipal() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'identificadorApiPrincipal' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public project.spring.avro.IdentificadorApiPrincipalRequest.Builder getIdentificadorApiPrincipalBuilder() {
      if (identificadorApiPrincipalBuilder == null) {
        if (hasIdentificadorApiPrincipal()) {
          setIdentificadorApiPrincipalBuilder(project.spring.avro.IdentificadorApiPrincipalRequest.newBuilder(identificadorApiPrincipal));
        } else {
          setIdentificadorApiPrincipalBuilder(project.spring.avro.IdentificadorApiPrincipalRequest.newBuilder());
        }
      }
      return identificadorApiPrincipalBuilder;
    }

    /**
     * Sets the Builder instance for the 'identificadorApiPrincipal' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public project.spring.avro.PagamentoRequest.Builder setIdentificadorApiPrincipalBuilder(project.spring.avro.IdentificadorApiPrincipalRequest.Builder value) {
      clearIdentificadorApiPrincipal();
      identificadorApiPrincipalBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'identificadorApiPrincipal' field has an active Builder instance
     * @return True if the 'identificadorApiPrincipal' field has an active Builder instance
     */
    public boolean hasIdentificadorApiPrincipalBuilder() {
      return identificadorApiPrincipalBuilder != null;
    }

    /**
      * Clears the value of the 'identificadorApiPrincipal' field.
      * @return This builder.
      */
    public project.spring.avro.PagamentoRequest.Builder clearIdentificadorApiPrincipal() {
      identificadorApiPrincipal = null;
      identificadorApiPrincipalBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'value' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getValue() {
      return value;
    }


    /**
      * Sets the value of the 'value' field.
      * @param value The value of 'value'.
      * @return This builder.
      */
    public project.spring.avro.PagamentoRequest.Builder setValue(java.nio.ByteBuffer value) {
      validate(fields()[3], value);
      this.value = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'value' field has been set.
      * @return True if the 'value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'value' field.
      * @return This builder.
      */
    public project.spring.avro.PagamentoRequest.Builder clearValue() {
      value = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'usuario' field.
      * @return The value.
      */
    public project.spring.avro.UsuarioPagamentoRequest getUsuario() {
      return usuario;
    }


    /**
      * Sets the value of the 'usuario' field.
      * @param value The value of 'usuario'.
      * @return This builder.
      */
    public project.spring.avro.PagamentoRequest.Builder setUsuario(project.spring.avro.UsuarioPagamentoRequest value) {
      validate(fields()[4], value);
      this.usuarioBuilder = null;
      this.usuario = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'usuario' field has been set.
      * @return True if the 'usuario' field has been set, false otherwise.
      */
    public boolean hasUsuario() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'usuario' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public project.spring.avro.UsuarioPagamentoRequest.Builder getUsuarioBuilder() {
      if (usuarioBuilder == null) {
        if (hasUsuario()) {
          setUsuarioBuilder(project.spring.avro.UsuarioPagamentoRequest.newBuilder(usuario));
        } else {
          setUsuarioBuilder(project.spring.avro.UsuarioPagamentoRequest.newBuilder());
        }
      }
      return usuarioBuilder;
    }

    /**
     * Sets the Builder instance for the 'usuario' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public project.spring.avro.PagamentoRequest.Builder setUsuarioBuilder(project.spring.avro.UsuarioPagamentoRequest.Builder value) {
      clearUsuario();
      usuarioBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'usuario' field has an active Builder instance
     * @return True if the 'usuario' field has an active Builder instance
     */
    public boolean hasUsuarioBuilder() {
      return usuarioBuilder != null;
    }

    /**
      * Clears the value of the 'usuario' field.
      * @return This builder.
      */
    public project.spring.avro.PagamentoRequest.Builder clearUsuario() {
      usuario = null;
      usuarioBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PagamentoRequest build() {
      try {
        PagamentoRequest record = new PagamentoRequest();
        if (cartaoBuilder != null) {
          try {
            record.cartao = this.cartaoBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("cartao"));
            throw e;
          }
        } else {
          record.cartao = fieldSetFlags()[0] ? this.cartao : (project.spring.avro.CartaoCreditoRequest) defaultValue(fields()[0]);
        }
        if (titularBuilder != null) {
          try {
            record.titular = this.titularBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("titular"));
            throw e;
          }
        } else {
          record.titular = fieldSetFlags()[1] ? this.titular : (project.spring.avro.TitularCartaoCreditoRequest) defaultValue(fields()[1]);
        }
        if (identificadorApiPrincipalBuilder != null) {
          try {
            record.identificadorApiPrincipal = this.identificadorApiPrincipalBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("identificadorApiPrincipal"));
            throw e;
          }
        } else {
          record.identificadorApiPrincipal = fieldSetFlags()[2] ? this.identificadorApiPrincipal : (project.spring.avro.IdentificadorApiPrincipalRequest) defaultValue(fields()[2]);
        }
        record.value = fieldSetFlags()[3] ? this.value : (java.nio.ByteBuffer) defaultValue(fields()[3]);
        if (usuarioBuilder != null) {
          try {
            record.usuario = this.usuarioBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("usuario"));
            throw e;
          }
        } else {
          record.usuario = fieldSetFlags()[4] ? this.usuario : (project.spring.avro.UsuarioPagamentoRequest) defaultValue(fields()[4]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PagamentoRequest>
    WRITER$ = (org.apache.avro.io.DatumWriter<PagamentoRequest>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PagamentoRequest>
    READER$ = (org.apache.avro.io.DatumReader<PagamentoRequest>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










